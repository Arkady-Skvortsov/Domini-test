import { ApiProperty } from '@nestjs/swagger';
import {
  Entity,
  PrimaryGeneratedColumn,
  Column,
  OneToMany,
  OneToOne,
} from 'typeorm';
import FriendsEntity from './friends.entity';
import PresentEntity from '../../present/entities/present.entity';
import JwtTokenEntity from 'src/jwt-token/entities/jwt-token.entity';

@Entity({ name: 'users' })
export default class UserEntity {
  @ApiProperty({
    type: Number,
    example: 23,
    description: 'Primary autogenerated key of the table',
  })
  @PrimaryGeneratedColumn()
  public id: number;

  @ApiProperty({
    type: String,
    example: 'Arkadiy',
    description: 'Username of the current user',
  })
  @Column({ type: 'varchar', nullable: false, unique: true })
  public username: string;

  @ApiProperty({
    type: String,
    example: 'Password123',
    description: 'Password of the current user',
  })
  @Column({ type: 'varchar', nullable: true, unique: true })
  public password: string;

  @ApiProperty({
    type: Number,
    example: 100,
    description: 'Level of the health from current user',
  })
  @Column({ type: 'int', nullable: false })
  public health: number;

  @ApiProperty({
    type: () => JwtTokenEntity,
    description: 'Current Jwt Token of the current user',
  })
  @OneToOne(() => JwtTokenEntity, (jwt) => jwt.user)
  public jwt_token: JwtTokenEntity;

  @ApiProperty({
    type: Number,
    example: 50,
    description: 'Level of the defense from current user',
  })
  @Column({ type: 'int', nullable: false })
  public defense: number;

  @ApiProperty({
    type: Number,
    example: 2000,
    description: 'Coins of the current user',
  })
  @Column({ type: 'bigint', nullable: false })
  public coins: number;

  @ApiProperty({
    type: Number,
    example: 1000,
    description: 'Cristaly of the current user',
  })
  @Column({ type: 'bigint', nullable: false })
  public cristaly: number;

  @ApiProperty({
    type: () => FriendsEntity,
    example: 'Ilya, Ilshat, Khamil Mysliwiec',
    description: 'Friends of the current user',
  })
  @OneToMany(() => FriendsEntity, (friends) => friends.friends)
  public friends: FriendsEntity[];

  @ApiProperty({
    type: () => PresentEntity,
    example: 'Present #1',
    description: 'Present, which current user catched from another user',
  })
  @OneToMany(() => PresentEntity, (present) => present)
  public catchPresents: PresentEntity[];

  @ApiProperty({
    type: () => PresentEntity,
    example: 'Resources, Buddy! :)',
    description: 'Present, which current user sended to another user',
  })
  @OneToMany(() => PresentEntity, (present) => present)
  public sendPresents: PresentEntity[];
}
